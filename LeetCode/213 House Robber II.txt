/**
 * Note: This is an extension of House Robber.
 * After robbing those houses on that street,
 * the thief has found himself a new place for his thievery so that he will not get too much attention.
 * This time, all houses at this place are arranged in a circle.
 * That means the first house is the neighbor of the last one.
 * Meanwhile, the security system for these houses remain the same as for those in the previous street.
 * Given a list of non-negative integers representing the amount of money of each house,
 * determine the maximum amount of money you can rob tonight without alerting the police.
 *
 * 思路：这题是198题的拓展，从原来的直线变成环。
 * 在已解决198题的基础上，只要比较从0到n-2 与 从1到n-1两种情况下数额的大小即可。
 */

public class Solution {
    public int rob(int[] nums) {
        if(nums.length == 0) return 0;
        if(nums.length == 1) return nums[0];
        return Math.max(robNoCycle(nums, 0, nums.length-2), robNoCycle(nums, 1, nums.length-1));
    }
    
    private int robNoCycle(int[] nums, int low, int high){
        int[] dp = new int[high-low+2];
        dp[0] = 0;
        dp[1] = nums[low];
        for(int i = 2; i < high-low+2; i++){
            dp[i] = Math.max(dp[i-1], dp[i-2]+nums[i+low-1]);
        }
        return dp[high-low+1];
    }
}