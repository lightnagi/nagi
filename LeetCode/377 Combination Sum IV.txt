/**
 * Given an integer array with all positive numbers and no duplicates,
 * find the number of possible combinations that add up to a positive integer target.
 * 
 * 给定一个没有重复元素的正数数组,输出 相加的和为一个目标正整数 的所有可能的组合的数量。
 * 每个元素可以重复使用。
 *
 * 思路：动态规划。
 * 自底向上，找出所有的可能。
 * dp[target] = sum(dp[target - nums[i]]), where 0 <= i < nums.length, and target >= nums[i].
 */
 
public class Solution {
    public int combinationSum4(int[] nums, int target) {
        int[] dp = new int[target+1];
        dp[0] = 1; //由于目标为正整数，所以不存在dp[0]，此处设为1方便操作。
        for(int i = 0; i < target+1; i++){
            for(int j = 0; j < nums.length;j++){
                if(i >= nums[j]){
                    dp[i] += dp[i-nums[j]];
                }
            }
        }
        return dp[target];
    }
}