/**
 * Write a program to find the n-th ugly number.
 * Ugly numbers are positive numbers whose prime factors only include 2, 3, 5.
 * For example, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
 * Note that 1 is typically treated as an ugly number, and n does not exceed 1690.
 * 求第n个丑数。
 */

public class Solution {  
    public int nthUglyNumber(int n) {  
        int[] res = new int[n];
        res[0] = 1;
        int index2 = 0, index3 = 0, index5 = 0;
        int factor2 = 2, factor3 = 3, factor5 = 5;
        for(int i = 1; i < n; i++){
            int min = Math.min(Math.min(factor2, factor3), factor5);
            res[i] = min;
            if(min == factor2){
                factor2 = 2 * res[index2 + 1];
                index2++;
            }
            if(min == factor3){
                factor3 = 3 * res[index3 + 1];
                index3++;
            }
            if(min == factor5){
                factor5 = 5 * res[index5 + 1];
                index5++;
            }
        }
        return res[n - 1];
    }  
}  