/**
 * Given a non negative integer number num. 
 * For every numbers i in the range 0 ≤ i ≤ num calculate the number of 1's in their binary representation 
 * and return them as an array.(in linear time O(n) /possibly in a single pass.Space complexity should be O(n))
 * 统计从0到n每个数的二进制写法的1的个数.
 * 
 * 思路：每个数的1的个数都相当于其右移一位中1的个数，再加上最后一位1的个数。

public class Solution {
    public int[] countBits(int num) {
        int[] res = new int[num+1];
        for(int i = 0; i < num+1; i++){
            res[i] = res[i >> 1] + (i & 1);
        }
        return res;
    }
}