/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Given a list, rotate the list to the right by k places, where k is non-negative.
 * 循环移位链表k次
 * 思路：先求出链表长度，若k大于链表长度，k %= length;
 *       从头移动一个指针，使其指向倒数第k+1个结点，保存其下一个结点的指针，然后令next指向null；
 *       另一个指针在链表尾部，使其next指向头部。
 */ 
public class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null) return null;
        
        ListNode node = head;
        ListNode tail = head;
        int length = 1;
        while(tail.next != null){
            tail = tail.next;
            length++;
        }
        for(int i = 0; i < length - k%length - 1; i++){
            node = node.next;
        }        
        tail.next = head;
        tail = node.next;
        node.next = null;
        return tail;
    }
}