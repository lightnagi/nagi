/**
 *Find the contiguous subarray within an array (containing at least one number) which has the largest sum.
 * For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
 * the contiguous subarray [4,-1,2,1] has the largest sum = 6.
 * 给定一个数组，求元素和最大的子数组，输出该元素和。
 *
 * 思路：动态规划。
 */

public class Solution {
    public int maxSubArray(int[] nums) {
        int max = Integer.MIN_VALUE;
        int sum = 0;
        for(int i = 0; i < nums.length; i++){
            sum += nums[i];
            max = Math.max(max, sum); 
            sum = sum < 0 ? 0 : sum; //前i个元素和 若为负数，则舍弃。
        }
        return max;
    }
}