/**
 * Find all possible combinations of k numbers that add up to a number n, 
 * given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.
 * 由k个数（1到9）相加得到n，列出所有可能。
 * 
 * 回溯法
 */

public class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> res = new ArrayList<>();
        helper(res, new ArrayList<Integer>(), 1, k, n);
        return res;
    }
    public void helper(List<List<Integer>> res, List<Integer> comb, int start, int k, int n){
        if(comb.size() > k || n < 0){
            return;
        }
        if(comb.size() == k && n == 0){
            List<Integer> li = new ArrayList<Integer>(comb);
            res.add(li);
            return;
        }
        for(int i = start; i <= 9; i++){
            comb.add(i);
            helper(res, comb, i+1, k, n-i);
            comb.remove(comb.size()-1);
        }
    }
}